{"version":3,"sources":["components/Guests/Guest/Guest.module.scss","components/Smiley/Smiley.module.scss","components/Guests/Guests.module.scss","components/UI/Modal/Modal.module.scss","components/Header/Header.module.scss","components/Footer/Footer.module.scss","components/Main/Main.module.scss","components/UI/Spinner/Spinner.module.scss","components/ModalContent/ModalContent.module.scss","components/Smiley/Smiley.tsx","components/Header/Header.tsx","components/Footer/Footer.tsx","components/Main/Main.tsx","fakeApi/index.ts","context/GuestsContext.tsx","components/UI/Spinner/Spinner.tsx","components/UI/Button/Button.tsx","components/UI/Modal/Modal.tsx","components/ModalContent/ModalContent.tsx","components/Guests/Guest/Guest.tsx","components/Guests/Guests.tsx","containers/Guesty/Guesty.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Smiley","className","classes","Smiley__nose","Header","Footer","Main","children","milliseconds","GuestsContext","React","createContext","initialState","loading","guests","reducer","state","action","type","getGuests","index","updatedGuests","invitationStatus","updateGuestInvitationStatus","Error","GuestsContextProvider","useReducer","dispatch","useEffect","getGuestsFromFakeApi","a","Promise","resolve","reject","setTimeout","api","Math","floor","random","response","console","log","Provider","value","Spinner","Button","onClickHandler","onClick","Modal","Modal__content","ModalContent","name","email","Guest","props","useState","showModal","setShowModal","updateGuestInviteStatus","inviteStatus","modal","p","Guest__name","Guest__status","Guests","dispatcher","guestsList","map","guest","key","id","Guests__list","Guesty","useContext","MaGuestyin","style","textAlign","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.3f51f8c3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Guest\":\"Guest_Guest__2VUOy\",\"Guest__status\":\"Guest_Guest__status__1TdzZ\",\"Approved\":\"Guest_Approved__1pMG9\",\"Declined\":\"Guest_Declined__1Qz68\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Smiley\":\"Smiley_Smiley__18rCp\",\"Smiley__nose\":\"Smiley_Smiley__nose__3Uxh2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Guests__list\":\"Guests_Guests__list__27lGt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__31OI7\",\"Modal__content\":\"Modal_Modal__content__Yz0c6\",\"Modal__open\":\"Modal_Modal__open__NwZco\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"Header_Header__1CTzX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Footer\":\"Footer_Footer__37hEc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Main\":\"Main_Main__1ji4S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Spinner\":\"Spinner_Spinner__2FxkC\",\"spinner\":\"Spinner_spinner__3VQ06\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ModalContent\":\"ModalContent_ModalContent__26NZA\"};","import React from \"react\";\nimport classes from \"./Smiley.module.scss\";\n\nconst Smiley: React.FC = (): React.ReactElement => {\n  return (\n    <div className={classes.Smiley}>\n      <div className={classes.Smiley__nose}></div>\n    </div>\n  );\n};\n\nexport default Smiley;\n","import React from \"react\";\nimport classes from \"./Header.module.scss\";\nimport Smiley from \"./../Smiley/Smiley\";\n\nconst Header: React.FC = (): React.ReactElement => {\n  return (\n    <header className={classes.Header}>\n      Guesty\n      <Smiley />\n    </header>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport classes from \"./Footer.module.scss\";\n\nconst Footer: React.FC = (): React.ReactElement => {\n  return <footer className={classes.Footer}></footer>;\n};\n\nexport default Footer;\n","import React, { ReactNode } from \"react\";\nimport classes from \"./Main.module.scss\";\n\ninterface Props {\n  children: ReactNode;\n}\n\nconst Main = ({ children }: Props): React.ReactElement => {\n  return <main className={classes.Main}>{children}</main>;\n};\n\nexport default Main;\n","import api from \"./fakeApi.json\";\n\nconst milliseconds = [2000, 3000, 4000, 5000];\n\nexport const fakeApi = (): Promise<any> => {\n  return new Promise((resolve, reject) => {\n    let wait = setTimeout(() => {\n      resolve(api);\n    }, milliseconds[Math.floor(Math.random() * 4)]);\n  });\n};\n","import React, { useEffect, useReducer } from \"react\";\nimport { fakeApi } from \"./../fakeApi\";\n\nexport const GuestsContext = React.createContext({});\n\ninterface Init {\n  loading: boolean;\n  guests: Array<Object>;\n}\n\nconst initialState: Init = {\n  loading: true,\n  guests: [],\n};\n\nconst getGuests = (state: any, action: any) => {\n  const { guests } = action;\n  return {\n    ...state,\n    loading: false,\n    guests,\n  };\n};\nconst updateGuestInvitationStatus = (state: any, action: any) => {\n  const { index } = action;\n  const updatedGuests = [...state.guests];\n\n  updatedGuests[index].invitationStatus = !updatedGuests[index]\n    .invitationStatus;\n\n  return {\n    ...state,\n    updatedGuests,\n    loading: false,\n  };\n};\nconst reducer = (state: any, action: any) => {\n  switch (action.type) {\n    case \"GET_GUESTS\":\n      return getGuests(state, action);\n    case \"UPDATE_GUEST_INVITATION_STATUS\":\n      return updateGuestInvitationStatus(state, action);\n    default:\n      throw new Error(\"Something is wrong, you was not supposed to be here\");\n  }\n};\n\ninterface Props {\n  children: React.ReactNode;\n}\n\nconst GuestsContextProvider = ({ children }: Props) => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  useEffect(() => {\n    getGuestsFromFakeApi();\n  }, []);\n\n  const getGuestsFromFakeApi = async () => {\n    try {\n      const response = await fakeApi();\n      dispatch({\n        type: \"GET_GUESTS\",\n        guests: response,\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <GuestsContext.Provider value={{ state, dispatch }}>\n      {children}\n    </GuestsContext.Provider>\n  );\n};\n\nexport default GuestsContextProvider;\n","import React from \"react\";\nimport classes from \"./Spinner.module.scss\";\n\nconst Spinner = (): React.ReactElement => {\n  return <div className={classes.Spinner}></div>;\n};\n\nexport default Spinner;\n","import React, { ReactNode } from \"react\";\nimport classes from \"./Button.module.scss\";\n\ninterface Props {\n  onClickHandler: () => void;\n  children: string;\n}\n\nconst Button = ({ onClickHandler, children }: Props) => {\n  return (\n    <button className={classes.Button} onClick={onClickHandler}>\n      {children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React from \"react\";\nimport classes from \"./Modal.module.scss\";\n\ninterface Props {\n  children: any;\n}\n\nconst Modal = ({ children }: Props) => {\n  return (\n    <div className={classes.Modal}>\n      <div className={classes.Modal__content}>{children}</div>\n    </div>\n  );\n};\n\nexport default Modal;\n","import React from \"react\";\nimport classes from \"./ModalContent.module.scss\";\nimport Button from \"./../UI/Button/Button\";\n\ninterface Props {\n  name: string;\n  email: string;\n  invitationStatus: boolean;\n  onClickHandler: () => void;\n}\n\nconst ModalContent = ({\n  name,\n  email,\n  invitationStatus,\n  onClickHandler,\n}: Props) => {\n  return (\n    <div className={classes.ModalContent}>\n      <p>{name}</p>\n      <p>{email}</p>\n      <Button onClickHandler={onClickHandler}>\n        {!invitationStatus ? \"Approve\" : \"Decline\"}\n      </Button>\n    </div>\n  );\n};\n\nexport default ModalContent;\n","import React, { useState, useContext } from \"react\";\nimport classes from \"./Guest.module.scss\";\n\nimport Button from \"./../../UI/Button/Button\";\nimport Modal from \"./../../UI/Modal/Modal\";\nimport ModalContent from \"./../../ModalContent/ModalContent\";\n\nconst Guest = (props: any): React.ReactElement => {\n  const [showModal, setShowModal] = useState(false);\n\n  const { name, email, invitationStatus, updateGuestInviteStatus } = props;\n  const inviteStatus = invitationStatus ? \"Approved\" : \"Declined\";\n  const setStatus = () => {\n    updateGuestInviteStatus();\n    setShowModal((p) => !p);\n  };\n\n  const modal = showModal ? (\n    <Modal>\n      <ModalContent\n        invitationStatus={invitationStatus}\n        onClickHandler={setStatus}\n        name={name}\n        email={email}\n      />\n    </Modal>\n  ) : null;\n  return (\n    <>\n      {modal}\n      <li className={classes.Guest}>\n        <p className={classes.Guest__name}>{name}</p>\n        <p className={`${classes.Guest__status} ${classes[inviteStatus]}`}>\n          Invitation status: {inviteStatus}\n        </p>\n        <Button onClickHandler={() => setShowModal((p) => !p)}>Manage</Button>\n      </li>\n    </>\n  );\n};\n\nexport default Guest;\n","import React from \"react\";\nimport classes from \"./Guests.module.scss\";\nimport Guest from \"./Guest/Guest\";\n\ninterface Props {\n  guests: Array<Object>;\n  dispatcher: any;\n}\n\nconst Guests = ({ guests, dispatcher }: Props): React.ReactElement => {\n  const updateGuestInviteStatus = (index: number) => {\n    dispatcher({\n      type: \"UPDATE_GUEST_INVITATION_STATUS\",\n      index,\n    });\n  };\n\n  const guestsList = guests.map((guest: any, key: number) => (\n    <Guest\n      updateGuestInviteStatus={() => updateGuestInviteStatus(key)}\n      key={guest.id}\n      {...guest}\n    />\n  ));\n  return (\n    <div className={classes.Guests}>\n      <ul className={classes.Guests__list}>{guestsList}</ul>\n    </div>\n  );\n};\n\nexport default Guests;\n","import React, { useContext } from \"react\";\nimport { GuestsContext } from \"./../../context/GuestsContext\";\nimport classes from \"./Guesty.module.scss\";\nimport Spinner from \"./../../components/UI/Spinner/Spinner\";\nimport Guests from \"./../../components/Guests/Guests\";\n\nconst Guesty: React.FC = (): React.ReactElement => {\n  // @ts-ignore\n  const { state, dispatch } = useContext(GuestsContext);\n\n  return (\n    <div className={classes.MaGuestyin}>\n      <h1 style={{ textAlign: \"center\" }}>The Best Event Name in The World</h1>\n      {state.loading ? (\n        <Spinner />\n      ) : (\n        <Guests dispatcher={dispatch} guests={state.guests} />\n      )}\n    </div>\n  );\n};\n\nexport default Guesty;\n","import React from \"react\";\nimport \"./App.scss\";\nimport Header from \"./components/Header/Header\";\nimport Footer from \"./components/Footer/Footer\";\nimport Main from \"./components/Main/Main\";\nimport Guesty from \"./containers/Guesty/Guesty\";\n\nfunction App() {\n  return (\n    <>\n      <Header />\n      <Main>{<Guesty />}</Main>\n      <Footer />\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport GuestsContextProvider from \"./context/GuestsContext\";\n\nReactDOM.render(\n  // <React.StrictMode>\n  <GuestsContextProvider>\n    <App />\n  </GuestsContextProvider>,\n\n  // </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}